version: "3.9"

networks:
 kong-net:
  driver: bridge

 fineract-tier:
    external: true

services:


  postgres:
    image: postgres:9.6
    restart: always
    #ports:
    #  - "5432:5432"
    environment:
      POSTGRES_PASSWORD: hdUbHLM48ufZ48b
    volumes:
      - ./.data/postgresql:/var/lib/postgresql/data
      - ./psql_init:/docker-entrypoint-initdb.d/init-user-db.sh
    networks:
      - kong-net

  kong-migration:
    image: kong:2.8.1-alpine
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: postgres
      KONG_DATABASE: postgres
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: hdUbHLM48ufZ48b

  kong:
    platform: linux/amd64
    image: kong:2.8.1-alpine
    restart: always
    networks:
      - kong-net
      - fineract-tier        
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: hdUbHLM48ufZ48b 
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_LUA_SSL_TRUSTED_CERTIFICATE:  /etc/ssl/certs/ca-certificates.crt
      KONG_TRUSTED_IPS: 0.0.0.0/0,::/0
      KONG_REAL_IP_HEADER: X-Forwarded-For
      KONG_REAL_IP_RECURSIVE: "on"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
            #- "80:8000"
            #- "443:8443"
       - "127.0.0.1:8001:8001"
       - "127.0.0.1:8444:8444"
       - "0.0.0.0:80:8000/tcp"
       - "0.0.0.0:443:8443/tcp"
       - "0.0.0.0:9191:8443/tcp"

  # konga-database:
  #   image: mongo:4.1.5
  #   container_name: konga-database
  #   volumes:
  #     - ./.data/konga_data:/data/db
  #   ports:
  #     - 27017:27017
  #   healthcheck:
  #     test: echo 'db.stats().ok' | mongo localhost:27017/konga --quiet
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  konga:
    image: pantsel/konga:latest #0.14.1
    container_name: konga
    volumes:
      - ./user_seed.js:/app/user_seed.js:ro
        #    ports:
            #- 1337:1337
            #- 127.0.0.1:1337:1337
    environment:
      # KONGA_SEED_USER_DATA_SOURCE_FILE: /app/user_seed.js
      KONGA_HOOK_TIMEOUT: 120000
      KONGA_LOG_LEVEL: warn
      NODE_ENV: production
      DB_ADAPTER: postgres
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: hdUbHLM48ufZ48b
      DB_DATABASE: konga_db
    restart: always
    networks:
      - kong-net


  konga-prepare:
    image: pantsel/konga:latest #0.14.1
    command: "-c prepare -a postgres -u postgresql://postgres:hdUbHLM48ufZ48b@postgres:5432/konga_db"
    environment:
      DB_ADAPTER: postgres
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: hdUbHLM48ufZ48b
      # KONGA_SEED_USER_DATA_SOURCE_FILE: /run/secrets/konga_user_seed
    # secrets:
    #      - konga_user_seed
    networks:
      - kong-net
    restart: on-failure
   
secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
  konga_user_seed:
    file: ./konga_user_seed

